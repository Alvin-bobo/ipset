/* -*- coding: utf-8 -*-
 * ----------------------------------------------------------------------
 * Copyright © 2009-2010, RedJack, LLC.
 * All rights reserved.
 *
 * Please see the LICENSE.txt file in this distribution for license
 * details.
 * ----------------------------------------------------------------------
 */

#include <glib.h>

#include <ipset/bdd/nodes.h>
#include <ipset/ipset.h>
#include <ipset/internal.h>


/**
 * Given a BDD variable number, return the index of the corresponding
 * bit in an IP address.  IPv4 addresses use variables 1-32; IPv6
 * addresses use 1-128.  (Variable 0 is used to identify the kind of
 * address — TRUE for IPv4, FALSE for IPv6.)
 */

static guint
IPMAP_NAME(bit_for_var)(ipset_variable_t var)
{
    return (var - 1);
}


/**
 * An assignment function that can be used to evaluate an IP map BDD.
 */

static gboolean
IPMAP_NAME(assignment)(gconstpointer addr, ipset_variable_t var)
{
    if (var == 0)
    {
        return IP_DISCRIMINATOR_VALUE;
    } else {
        guint  bit = IPMAP_NAME(bit_for_var)(var);
        return IPSET_BIT_GET(addr, bit);
    }
}


gint
IPMAP_NAME(get)(ip_map_t *map, gpointer elem)
{
    return ipset_node_evaluate
        (map->map_bdd, IPMAP_NAME(assignment), elem);
}
